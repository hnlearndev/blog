[package]
name = "blog"
version = "0.1.0"
edition = "2024"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
leptos-use = { version = "0.16.2" }
leptos = { version = "0.8.8", features = ["nightly"] }
leptos_router = { version = "0.8.0", features = ["nightly"] }
axum = { version = "0.8.0", optional = true }
console_error_panic_hook = { version = "0.1", optional = true }
leptos_axum = { version = "0.8.0", optional = true }
leptos_meta = { version = "0.8.0" }
tokio = { version = "1", features = ["rt-multi-thread"], optional = true }
wasm-bindgen = { version = "0.2.101", optional = true }
sqlx = { version = "0.8.6", features = ["runtime-tokio", "postgres", "macros", "uuid", "chrono"], optional = true }
chrono = { version = "0.4.41", features = ["serde"] }
uuid = { version = "1.18.1", features = ["v4", "v5", "serde", "js"] }
thiserror = "2.0.16"
serde = { version = "1.0.219", features = ["derive"] }
garde = { version = "0.22.0", features = ["derive", "email"] }
gloo-net = { version = "0.6.0", optional = true }
serde_json = { version = "1.0", optional = true }
web-sys = { version = "0.3.78", optional = true, features = ["Window", "Navigator", "console", "Storage", "MediaQueryList", "Document", "HtmlElement"] }
wasm-bindgen-futures = { version = "0.4.51", optional = true }
wee_alloc = { version = "0.4.5", optional = true }
dotenvy = { version = "0.15", optional = true }
lucide-leptos = { version = "2.32.0", features = ["all-icons"] }
tower_governor = { version = "0.8.0", optional = true }
tower = { version = "0.5.2", features = ["timeout"], optional = true }
tower-http = { version = "0.6.6", features = ["cors", "compression-br", "timeout", "trace", "set-header"], optional = true }
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", features = ["fmt", "env-filter", "json"] }
axum-extra = { version = "0.10.1", features = ["cookie"], optional = true }
rand = { version = "0.9.2", optional = true }
base64 = { version = "0.22", optional = true }
governor = { version = "0.10.1", optional = true }

[features]
hydrate = [
    "leptos/hydrate",
    "dep:console_error_panic_hook",
    "dep:wasm-bindgen",
    "dep:gloo-net",
    "dep:serde_json",
    "dep:web-sys",
    "dep:wasm-bindgen-futures",
    "dep:wee_alloc",
]
ssr = [
    "dep:axum",
    "dep:tokio",
    "dep:leptos_axum",
    "dep:sqlx",
    "dep:dotenvy",
    "dep:tower_governor",
    "dep:tower",
    "dep:tower-http",
    "dep:tracing",
    "dep:axum-extra",
    "dep:rand",
    "dep:base64",
    "dep:governor",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
]

[build-dependencies]
pulldown-cmark = { version = "0.13", default-features = false, features = ["html"] }
syntect = "5"
chrono = { version = "0.4", features = ["serde"] }

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"
strip = true

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "blog"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
# style-file = "style/main.scss"  # Disabled - using static CSS files
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
